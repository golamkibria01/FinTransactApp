@model UserLogin
@{
    Layout = "_LoginLayout";
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-4">
        <form>
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label"></label>
                <input id="username" class="form-control" placeholder="Name" />
            </div>
            <div class="form-group">
                <label class="control-label"></label>
                <input type="password" id="password" class="form-control" placeholder="Password" />
            </div>
            <div class="form-group">
                <input type="button" id="btnLogin" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
    document.getElementById('btnLogin').onclick = async function () {
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        const response = await fetch('/Auth/Login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ username, password }),
        });

        if (response.ok) {
            const data = await response.json();
            localStorage.setItem('token', data.data.token);
            localStorage.setItem('userId', data.data.userId);

            window.location.href = '/home';
        } else {
            document.getElementById('message').innerText = 'Login failed!';
        }
    };
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


